name: Release

on:
  release:
    types:
      - released

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=ghcr.io/sitkoru/actions-container
          DOCKER_IMAGE_WASM=ghcr.io/sitkoru/actions-container-wasm
          DOCKER_IMAGE_YANDEX=cr.yandex/crp7mlmqdq7ehq1gafh4/0xdev/actions-container
          DOCKER_IMAGE_WASM_YANDEX=cr.yandex/crp7mlmqdq7ehq1gafh4/0xdev/actions-container-wasm
          VERSION=${GITHUB_REF#refs/tags/}
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          TAGS_WASM="${DOCKER_IMAGE_WASM}:${VERSION}"
          TAGS_YANDEX="${DOCKER_IMAGE_YANDEX}:${VERSION}"
          TAGS_WASM_YANDEX="${DOCKER_IMAGE_WASM_YANDEX}:${VERSION}"
          if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            MINOR=${VERSION%.*}
            MAJOR=${MINOR%.*}
            TAGS="$TAGS,${DOCKER_IMAGE}:${MINOR},${DOCKER_IMAGE}:${MAJOR},${DOCKER_IMAGE}:latest"
            TAGS_WASM="$TAGS_WASM,${DOCKER_IMAGE_WASM}:${MINOR},${DOCKER_IMAGE_WASM}:${MAJOR},${DOCKER_IMAGE_WASM}:latest"
            TAGS_YANDEX="$TAGS_YANDEX,${DOCKER_IMAGE_YANDEX}:${MINOR},${DOCKER_IMAGE_YANDEX}:${MAJOR},${DOCKER_IMAGE_YANDEX}:latest"
            TAGS_WASM_YANDEX="$TAGS_WASM_YANDEX,${DOCKER_IMAGE_WASM_YANDEX}:${MINOR},${DOCKER_IMAGE_WASM_YANDEX}:${MAJOR},${DOCKER_IMAGE_WASM_YANDEX}:latest"
          elif [ "${{ github.event_name }}" = "push" ]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
            TAGS_WASM="$TAGS_WASM,${DOCKER_IMAGE_WASM}:sha-${GITHUB_SHA::8}"
            TAGS_YANDEX="$TAGS_YANDEX,${DOCKER_IMAGE_YANDEX}:sha-${GITHUB_SHA::8}"
            TAGS_WASM_YANDEX="$TAGS_WASM_YANDEX,${DOCKER_IMAGE_WASM_YANDEX}:sha-${GITHUB_SHA::8}"
          fi
          TAGS_FINAL="$TAGS,$TAGS_YANDEX"
          TAGS_WASM_FINAL="$TAGS_WASM,$TAGS_WASM_YANDEX"
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS_FINAL}
          echo ::set-output name=tags-wasm::${TAGS_WASM_FINAL}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:master
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.BOT_NAME }}
          password: ${{ secrets.BOT_TOKEN }}
      - name: Login to Yandex Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.YANDEX_DOCKER_REGISTRY_URL }}
          username: ${{ secrets.YANDEX_DOCKER_REGISTRY_LOGIN }}
          password: ${{ secrets.YANDEX_DOCKER_REGISTRY_TOKEN }}
      - name: Build and push common
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ steps.prep.outputs.tags }}
          push: true
          target: common
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
      - name: Build and push wasm
        id: docker_build_wasm
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ steps.prep.outputs.tags-wasm }}
          push: true
          target: wasm
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
